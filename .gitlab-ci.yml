image: gcr.io/pi-dev-sandbox/gitlab-ci-base:jessie

variables:
  DOCKER_HOST: tcp://localhost:2375/
  DOCKER_DRIVER: overlay2
  DOCKER_TLS_CERTDIR: ""


services:
  - docker:19.03.1-dind

stages:
- build-test
- test

#########################
####  TEMPLATE      ####
########################

.test_template: &test_definition
  stage: test
  allow_failure: false
  before_script:
    - sed -i -e "s/{HIPAY_API_USER_TEST\}/$HIPAY_API_USER_TEST/" ./bin/docker/conf/test/hipay.env.sample
    - sed -i -e "s/{HIPAY_API_PASSWORD_TEST\}/$HIPAY_API_PASSWORD_TEST/" ./bin/docker/conf/test/hipay.env.sample
    - sed -i -e "s/{HIPAY_TOKENJS_PUBLICKEY_TEST\}/$HIPAY_TOKENJS_PUBLICKEY_TEST/" ./bin/docker/conf/test/hipay.env.sample
    - sed -i -e "s/{HIPAY_TOKENJS_USERNAME_TEST\}/$HIPAY_TOKENJS_USERNAME_TEST/" ./bin/docker/conf/test/hipay.env.sample
    - sed -i -e "s/{HIPAY_SECRET_PASSPHRASE_TEST\}/$HIPAY_SECRET_PASSPHRASE_TEST/" ./bin/docker/conf/test/hipay.env.sample
    - sed -i "s/$(echo {HIPAY_SECRET_PASSPHRASE_TEST} | sed -e 's/\([[\/.*]\|\]\)/\\&/g')/$(echo '$HIPAY_SECRET_PASSPHRASE_TEST' | sed -e 's/[\/&]/\\&/g')/g" ./bin/docker/conf/test/hipay.env.sample
    - sed -i -e "s@{PI_CI_DATA_URL\}@$PI_CI_DATA_URL@" ./bin/docker/conf/test/hipay.env.sample
    - cp ./bin/tests/.npmrc.sample ./bin/tests/.npmrc
    - sed -i -e "s/\${NPM_REGISTRY_TOKEN\}/$NPM_REGISTRY_TOKEN/" ./bin/tests/.npmrc
    - docker-compose -f docker-compose.test.yml up -d
    - until docker-compose -f docker-compose.test.yml logs | grep -m 1 "DOCKER WOOCOMMERCE TO HIPAY stage IS UP" ; do sleep 10 ; done
    - docker-compose -f docker-compose.test.yml logs
    - curl --retry 10 --retry-delay 20 -v http:\/\/localhost:8000
    - cd bin/tests
    - yarn install
  tags:
    - gcp-cypress-runner
  artifacts:
    paths:
      - bin/tests/cypress/videos
      - bin/tests/cypress/screenshots
    when: always

#########################
####  JOBS          ####
########################

build-test:
  stage: build-test
  script:
    - docker-compose -f docker-compose.test.yml build
  tags:
    - gcp-default-runner

test-cypress-1:
  <<: *test_definition
  script:
    - bash /tools/run-cypress-test.sh -f $TESTS_FOLDERS_1 -e $EXCLUDED_TEST_FILES --config baseUrl=http://localhost:8000 --env $CYPRESS_ENV

test-cypress-2:
  <<: *test_definition
  script:
    - bash /tools/run-cypress-test.sh -f $TESTS_FOLDERS_2 -e $EXCLUDED_TEST_FILES --config baseUrl=http://localhost:8000 --env $CYPRESS_ENV
