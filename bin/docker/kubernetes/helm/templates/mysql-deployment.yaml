apiVersion: v1
kind: Service
metadata:
  name: wordpress-mysql-{{ .Release.Name }}
  labels:
    app: wordpress-{{ .Release.Name }}
spec:
  ports:
    - port: 3306
  selector:
    app: wordpress-{{ .Release.Name }}
    tier: mysql-{{ .Release.Name }}
  clusterIP: None
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: mysql-pv-claim-{{ .Release.Name }}
  labels:
    app: wordpress-{{ .Release.Name }}
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 20Gi
---
apiVersion: apps/v1 # for versions before 1.9.0 use apps/v1beta2
kind: Deployment
metadata:
  name: wordpress-mysql-{{ .Release.Name }}
  labels:
    app: wordpress-{{ .Release.Name }}
spec:
  selector:
    matchLabels:
      app: wordpress-{{ .Release.Name }}
      tier: mysql-{{ .Release.Name }}
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app: wordpress-{{ .Release.Name }}
        tier: mysql-{{ .Release.Name }}
    spec:
      containers:
      - image: {{ Values.mysql_image }}:{{ Values.mysql_tag }}
        name: mysql-{{ .Release.Name }}
        resources:
          requests:
            memory: "256M"
            cpu: "500m"
          limits:
            memory: "512M"
            cpu: "1000m"
        envFrom:
          - configMapRef:
              name: wordpress-configmap-{{ .Release.Name }}
        ports:
        - containerPort: 3306
          name: mysql
        volumeMounts:
        - name: mysql-persistent-storage-{{ .Release.Name }}
          mountPath: /var/lib/mysql
      volumes:
      - name: mysql-persistent-storage-{{ .Release.Name }}
        persistentVolumeClaim:
          claimName: mysql-pv-claim-{{ .Release.Name }}
      nodeSelector:
        node_type: default
      tolerations:
        - key: "cd_service"
          operator: "Equal"
          value: "only"
          effect: "NoExecute"